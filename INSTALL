= Installation

== Local usage
You can use alois without installing antything. Beacause
ALOIS is a rails application you can simply use the common
rails commands to start a local webserver on port 3000. All
you need is a working rubygems version and some system
libraries installed on your system.

# required packages
 sudo apt-get install rubygems rake ruby1.8-dev libmysqlclient-dev libsqlite3-ruby1.8 libjfreechart-java libopenssl-ruby1.8 rsync
lenny: libmysqlclient15-dev braucht es das?
# install a java runtime and java compiler eg openjdk-6-jdk
 suod gem install libisi
# install ibisi dependencies
 apt-get install liblog4r-ruby libruby1.8 libprogressbar-ruby1.8 libcmdparse-ruby libtmail-ruby1.8

# download necessary gems
 make freeze-gems

# initialize plugins
 make init-plugins

# initialize directory structure
 make init

# creates new sqlite databases
 make init-db

# to pipe some logs (e.g. new syslog messages) into ALOIS use:
 tail -n0 -f /var/log/messages | GEM_HOME=<<svn-root>>/gems/ ruby <<svn-root>/prisma/bin/prisma stdin

# change into rails directory
 cd <<svn root>>/rails

# to start server
 ./script/server

ALOIS home can now be accessed at http://localhost:3000/
To get an overview of available tables and data goto: http://localhost:3000/table
To get a list of all configured views goto: http://localhost:3000/views/list

NOTE: If you use ALOIS locally, no munin statistics are available and there
are other issues that are not yet working with the sqlite database yet (like
some filtering methods).

== Debian installation
Add the following sources:
 deb http://www.backports.org/debian lenny-backports main
 deb http://debian.logintas.ch/ lenny/
 deb http://debian.logintas.ch/ all/

Update
 apt-get update

If there are newer libcsspool packages:
# ADD TO /etc/apt/preferences
 Package: libcsspool-ruby1.8
 Pin: version 0.2.6
 Pin-Priority: 1001

# install rubygems
 apt-get install rubygems
 # rubygems is wrong packaged
 dpkg  --install --force-all /var/cache/apt/archives/rubygems*_1.3.5-1rel_all.deb
 gem install --no-rdoc --no-ri -v=2.3.2 rails

# install alois
 apt-get install alois-single-system mysql-server

# SELECT SUN JVM
 update-alternatives --config java

# create necessary databases
 mysqladmin -u root -p create prisma
 mysqladmin -u root -p create pumpy
 mysqladmin -u root -p create alois

# Load database schemas
 prisma load pumpy
# prisma load prisma
# TODO: load prisma does not work use migrate insead
 prisma migrate prisma
 rake -f /usr/share/alois/www/Rakefile "db:schema:load"

# enable log collect
 cat /usr/share/doc/alois-sink/syslog-ng.conf.example/syslog-ng.conf.example  >> /etc/syslog-ng/syslog-ng.conf
 /etc/init.d/prisma-mysqlpiped restart
 /etc/init.d/syslog-ng restart

alois-setup

# enable apache site
 ln /etc/apache2/sites-available/alois /etc/apache2/sites-enabled/ -s
# restart dependant services
 restart munin-node
 restart apache2

# /etc/sudoers
# Alois
# =====
# Allow the web-frontend to set cronjobs
www-data    ALL=(prisma)    NOPASSWD:/usr/bin/prisma-sentinel --generate-crontab
